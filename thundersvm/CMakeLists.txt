if(MSVC)
    cmake_minimum_required(VERSION 3.4)
else()
    cmake_minimum_required(VERSION 2.8.12)
endif()

if (CMAKE_VERSION VERSION_LESS "3.0")
    project(thundersvm C CXX)
    set(PROJECT_VERSION 0.1.0)
else ()
    cmake_policy(SET CMP0048 NEW)
    cmake_policy(SET CMP0042 NEW)
    project(thundersvm VERSION 0.1.0 LANGUAGES C CXX)
endif ()
if(MSVC)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
endif()
set(USE_CUDA ON CACHE BOOL "Compile with CUDA")
set(USE_EIGEN OFF CACHE BOOL "Compile with Eigen")
set(BUILD_TESTS OFF CACHE BOOL "Build Tests")
set(USE_DOUBLE OFF CACHE BOOL "Use double as kernel_type")
if(USE_DOUBLE)
    message("Use double as kernel_type")
endif()
if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif ()
find_package(Threads REQUIRED QUIET)
find_package(OpenMP REQUIRED QUIET)
add_definitions("-DELPP_NO_LOG_TO_FILE") 
if (OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif ()

if (USE_CUDA)
    message("Compile with CUDA")
    find_package(CUDA REQUIRED QUIET)
    set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS} -std=c++11 -Wno-deprecated-gpu-targets)
    set(LINK_LIBRARY ${CUDA_cusparse_LIBRARY})

    # Correct error for GCC 5 and CUDA 7.5
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_MWAITXINTRIN_H_INCLUDED -D_FORCE_INLINES")
else ()
    message("Compile without CUDA")
endif ()

if (USE_EIGEN)
    message("using Eigen for acceleration")
    include_directories(${PROJECT_SOURCE_DIR}/eigen)
    add_compile_options("-march=native")
endif ()

if (CMAKE_VERSION VERSION_LESS "3.1")
    add_compile_options("-std=c++11")
else ()
    set(CMAKE_CXX_STANDARD 11)
endif ()

set(COMMON_INCLUDES ${PROJECT_SOURCE_DIR}/include ${CMAKE_CURRENT_BINARY_DIR})


set(DATASET_DIR ${PROJECT_SOURCE_DIR}/dataset/)
configure_file(include/thundersvm/config.h.in config.h)

set(PROJECT_LIB_NAME ${PROJECT_NAME})
include_directories(${COMMON_INCLUDES})
add_subdirectory(${PROJECT_SOURCE_DIR}/src/thundersvm)

if (BUILD_TESTS)
    message("Building tests")
    set(PROJECT_TEST_NAME ${PROJECT_NAME}-test)
    add_subdirectory(${PROJECT_SOURCE_DIR}/src/test)
    add_custom_target(runtest
            COMMAND ${PROJECT_TEST_NAME})
endif ()
